# Your workflow name.
# name: Deploy to Digital Ocean.

# # Run workflow on every push to prod main branch.
# on:
#   push:
#     branches: [main, develop]


# # Your workflows jobs.
# jobs:

#   jstest:
#     runs-on: ubuntu-latest
#     name: Code coverage
#     strategy:
#       matrix:
#         node-version: [12.x]
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: install packages
#         working-directory: ./frontend
#         run: npm install
#       - name: Build project
#         working-directory: ./frontend
#         continue-on-error: true
#         run: npm run build
#       - uses: actions/upload-artifact@v2
#         name: Upload production-ready build files
#         continue-on-error: true
#         with:
#           name: production-files
#           path: ./frontend/build

#   build:
#     name: Build and Push to digital ocean registry
#     runs-on: ubuntu-latest
#     needs: jstest
#     steps:
#       - name: Deploy package to digitalocean
#         uses: appleboy/ssh-action@master
#         env:
#           GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           host: ${{ secrets.DIGITAL_OCEAN_HOST }}
#           username: ${{ secrets.DIGITAL_OCEAN_USERNAME }}
#           password: ${{ secrets.DIGITAL_OCEAN_PASSWORD }}
#           port: ${{ secrets.DIGITAL_OCEAN_PORT }}
#           envs: GITHUB_USERNAME, GITHUB_TOKEN
#           script: |
#             apt-get upgrade -y
#             cd /etc/shift2go/gitRepo/shift2goWeb
#             git checkout develop
#             git pull
#             docker image prune -f
#             docker container prune -f
#             docker volume prune -f
#             docker-compose -f local-compose.yml up --force-recreate --build -d

